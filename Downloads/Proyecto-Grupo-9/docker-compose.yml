version: '3'
services:
  proxy:
    image: traefik:v2.9.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    expose:
      - 80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  cassandra:
    image: cassandra
    expose:
      - 9042
    healthcheck:
      test: ["CMD-SHELL", "nodetool status | grep 'UN'"]
      interval: 30s
      timeout: 30s
      retries: 10
  books-service:
    image: jaimesalvador/app-books:1.0.0
    expose:
      - 9081
    deploy:
      replicas: 3
    environment:
      - CASSANDRA_URI=cassandra
      - CASSANDRA_PORT=9042
      - CASSANDRA_KEYSPACE=distribuida
      - CASSANDRA_DATACENTER=datacenter1
      - CASSANDRA_REPLICAS=1
      - CASSANDRA_TABLE=books
      - WLP_HTTP_PORT=9081
    depends_on:
      cassandra:
        condition: service_healthy
    labels:
      - "traefik.http.routers.books.rule=PathPrefix(`/app-books`)"
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 20s
      retries: 20
  authors-service:
    image: jaimesalvador/app-authors:1.0.0
    expose:
      - 8000
    command: "python main.py"
    deploy:
      replicas: 2
    environment:
      - DATABASE_NAME=distribuida
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres-sql
      - DATABASE_PORT=5432
      - SERVER_PORT=8000
    depends_on:
      postgres-sql:
        condition: service_healthy
    labels:
      - "traefik.http.routers.authors.rule=PathPrefix(`/app-authors`)"
      - "traefik.http.middlewares.authors.stripprefix.prefixes=/app-authors"
      - "traefik.http.routers.authors.middlewares=authors"
